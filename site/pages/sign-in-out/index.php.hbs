<?php
require('../../vendor/autoload.php');
require('../dotenv-loader.php');

use Auth0\SDK\Auth0;

$domain        = getenv('AUTH0_DOMAIN');
$client_id     = getenv('AUTH0_CLIENT_ID');
$client_secret = getenv('AUTH0_CLIENT_SECRET');
$redirect_uri  = getenv('AUTH0_CALLBACK_URL'); // URL to redirect to after login
$audience      = getenv('AUTH0_AUDIENCE');

$auth0 = new Auth0([
  'domain' => $domain,
  'client_id' => $client_id,
  'client_secret' => $client_secret,
  'redirect_uri' => $redirect_uri,
  'audience' => $audience,
  'scope' => 'openid profile',
  'persist_id_token' => true,
  'persist_access_token' => true,
  'persist_refresh_token' => true,
]);

$userInfo = $auth0->getUser();
$position = strpos($redirect_uri,"://");
$protocol = substr($redirect_uri,0, $position) . "://";

if (!$userInfo) {
  // redirect user to login
	$auth0->login();
} else if (isset($_GET["code"])) {
  // redirect after user has logged in
  $logged_in_url = $protocol . $_SERVER['HTTP_HOST'] . "/docs";
  header('Location: ' . $logged_in_url);
  die();
} else {
  // log user out
	$auth0->logout();
  // redirect after logout
	$return_to = $protocol . $_SERVER['HTTP_HOST'] . "/docs?signedout";
	$logged_out_url = sprintf('http://%s/v2/logout?client_id=%s&returnTo=%s', $domain, $client_id, $return_to);
	header('Location: ' . $logged_out_url);
	die();
}